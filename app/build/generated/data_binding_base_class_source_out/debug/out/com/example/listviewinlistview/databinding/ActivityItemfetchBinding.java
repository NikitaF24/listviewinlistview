// Generated by view binder compiler. Do not edit!
package com.example.listviewinlistview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listviewinlistview.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityItemfetchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FloatingActionButton add;

  @NonNull
  public final FloatingActionButton button3;

  @NonNull
  public final ListView itemListView;

  @NonNull
  public final SearchView searchItem;

  private ActivityItemfetchBinding(@NonNull RelativeLayout rootView,
      @NonNull FloatingActionButton add, @NonNull FloatingActionButton button3,
      @NonNull ListView itemListView, @NonNull SearchView searchItem) {
    this.rootView = rootView;
    this.add = add;
    this.button3 = button3;
    this.itemListView = itemListView;
    this.searchItem = searchItem;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityItemfetchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityItemfetchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_itemfetch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityItemfetchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add;
      FloatingActionButton add = ViewBindings.findChildViewById(rootView, id);
      if (add == null) {
        break missingId;
      }

      id = R.id.button3;
      FloatingActionButton button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.itemListView;
      ListView itemListView = ViewBindings.findChildViewById(rootView, id);
      if (itemListView == null) {
        break missingId;
      }

      id = R.id.searchItem;
      SearchView searchItem = ViewBindings.findChildViewById(rootView, id);
      if (searchItem == null) {
        break missingId;
      }

      return new ActivityItemfetchBinding((RelativeLayout) rootView, add, button3, itemListView,
          searchItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
